name: Rust-CI-Private

on:
  repository_dispatch:
    types: [private-repo-rust-ci]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number from private repo'
        required: false
        type: string
      pr_ref:
        description: 'Git ref to checkout from private repo'
        required: false
        type: string
        default: 'main'

env:
  CARGO_TERM_COLOR: always
  CLOUD_VERSION: latest-amd64
  RUST_TOOLCHAIN: "1.85.0"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.client_payload.pr_number || github.event.inputs.pr_number || github.ref }}
  cancel-in-progress: true

jobs:
  ubuntu-job:
    runs-on: ubuntu-latest
    steps:
      - name: Set timezone for action
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "US/Pacific"

      - name: Maximize build space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force

      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          repository: AppFlowy-IO/AppFlowy-Premium
          token: ${{ secrets.ADMIN_GITHUB_TOKEN }}
          ref: ${{ github.event.client_payload.pr_ref || github.event.inputs.pr_ref || 'main' }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          components: rustfmt, clippy
          profile: minimal
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ runner.os }}
          cache-on-failure: true
          workspaces: |
            frontend/rust-lib

      - name: Checkout AppFlowy-Cloud-Premium code
        uses: actions/checkout@v4
        with:
          repository: AppFlowy-IO/AppFlowy-Cloud-Premium
          path: AppFlowy-Cloud-Premium
          token: ${{ secrets.ADMIN_GITHUB_TOKEN }}
          ref: 'main'

      - name: Run Server
        working-directory: AppFlowy-Cloud-Premium
        run: |
          cp deploy.env .env
          sed -i 's|RUST_LOG=.*|RUST_LOG=appflowy_cloud=trace,appflowy_collaborate=trace|' .env
          sed -i 's|GOTRUE_MAILER_AUTOCONFIRM=.*|GOTRUE_MAILER_AUTOCONFIRM=true|' .env
          sed -i 's|API_EXTERNAL_URL=.*|API_EXTERNAL_URL=http://localhost|' .env
          sed -i 's|APPFLOWY_SPAM_DETECT_ENABLED=.*|APPFLOWY_SPAM_DETECT_ENABLED=false|' .env
          sed -i 's|AI_OPENAI_API_KEY=.*|AI_OPENAI_API_KEY=${{ secrets.CI_OPENAI_API_KEY }}|' .env
          sed -i 's|APPFLOWY_ENVIRONMENT=.*|APPFLOWY_ENVIRONMENT=local|' .env

          cat .env

          echo "APPFLOWY_ENVIRONMENT is $APPFLOWY_ENVIRONMENT"
          export APPFLOWY_CLOUD_VERSION=${{ env.CLOUD_VERSION }}
          export APPFLOWY_HISTORY_VERSION=${{ env.CLOUD_VERSION }}
          export APPFLOWY_WORKER_VERSION=${{ env.CLOUD_VERSION }}
          export APPFLOWY_ADMIN_FRONTEND_VERSION=${{ env.CLOUD_VERSION }}
          
          docker login -u appflowyinc -p ${{ secrets.DOCKER_TOKEN }}
          docker compose pull
          docker compose up -d
          echo "Waiting for the container to be ready..."
          sleep 10
          docker ps -a

      - name: AppFlowy-Cloud Logs
        run: |
          docker logs appflowy-cloud-premium-appflowy_cloud-1

      - name: AppFlowy-AI Logs
        run: |
          docker logs appflowy-cloud-premium-ai-1

      - name: Configure Git credentials for Cargo
        run: |
          git config --global credential.helper store
          echo "https://${{ secrets.ADMIN_GITHUB_TOKEN }}:x-oauth-basic@github.com" > ~/.git-credentials

      - name: Run rust-lib tests
        working-directory: frontend/rust-lib
        env:
          RUST_LOG: info
          RUST_BACKTRACE: 1
          af_cloud_test_base_url: http://localhost
          af_cloud_test_ws_url: ws://localhost/ws/v1
          af_cloud_test_gotrue_url: http://localhost/gotrue
          GH_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}
        run: |
          cargo test --no-default-features --features="dart" -- --skip local_ollama_test --test-threads=2

      - name: rustfmt rust-lib
        run: cargo fmt --all -- --check
        env:
          GH_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}
        working-directory: frontend/rust-lib/

      - name: clippy rust-lib
        run: cargo clippy --all-targets -- -D warnings
        env:
          GH_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}
        working-directory: frontend/rust-lib

      - name: "Appflowy-Cloud container logs"
        if: always()
        working-directory: AppFlowy-Cloud-Premium
        run: |
          docker logs appflowy-cloud-premium-appflowy_cloud-1

      - name: "Redis logs"
        if: always()
        working-directory: AppFlowy-Cloud-Premium
        run: |
          docker logs appflowy-cloud-premium-redis-1

      - name: Clean up Docker images
        run: |
          docker image prune -af
          docker volume prune -f
